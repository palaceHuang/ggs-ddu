三次握手
--------------------------------------------------------------
第一次握手：Client将SYN（同步序列编号Synchronize Sequence Numbers）置1，随机产生一个初始序列号seq发送给Server，进入SYN_SENT状态； 第二次握手：Server收到Client的SYN=1之后，知道客户端请求建立连接，将自己的SYN置1，ACK（确认字符Acknowledge Character）置1，产生一个acknowledge number=sequence number+1，并随机产生一个自己的初始序列号，发送给客户端；进入SYN_RCVD状态； 第三次握手：客户端检查acknowledge number是否为序列号+1，ACK是否为1，检查正确之后将自己的ACK置为1，产生一个acknowledge number=服务器发的序列号+1，发送给服务器；进入ESTABLISHED状态；服务器检查ACK为1和acknowledge number为序列号+1之后，也进入ESTABLISHED状态；完成三次握手，连接建立。

HTTP2.0
--------------------------------------------------------------
加入了server push

int main(){fork()||fork();}共创建几个进程
--------------------------------------------------------------
fork()给子进程返回一个零值，而给父进程返回一个非零值； 在main这个主进程中，首先执行 fork() || fork(), 左边的fork()返回一个非零值，根据||的短路原则，前面的表达式为真时，后面的表达式不执行，故包含main的这个主进程创建了一个子进程， 由于子进程会复制父进程，而且子进程会根据其返回值继续执行，就是说，在子进程中， fork() ||fork()这条语句左边表达式的返回值是0, 所以||右边的表达式要执行，这时在子进程中又创建了一个进程， 即main进程->子进程->子进程，一共创建了3个进程。

如果系统的umask设置为244，创建一个新文件后，它的权限是？
--------------------------------------------------------------
Linux中的权限有r(读) w(写) x(执行)，分别用数字4,2,1代表。 Umask是设置系统创建文件时的默认权限，是创建文件权限补码，对文件来说最大值是6 Umask设为为244，则创建的文件默认权限是422，文件的第一位是‘-’也就是-r---w--w-

以下的命令得在（ ）自动执行：06 03 * * 3 lp /usr/local/message | mail -s "server message" root
--------------------------------------------------------------
使用crontab命令编辑 分　 时　 日　 月　 周　 命令 
  第1列表示分钟1～59 每分钟用*或者 */1表示 
  第2列表示小时1～23（0表示0点） 
  第3列表示日期1～31 
  第4列表示月份1～12 
  第5列标识号星期0～6（0表示星期天）
  第6列要运行的命令

  若 k 为 int 型变量，则程序段的执行结果是（） k=-8567; printf("|%06d|\n",k);
  -------------------------------------------------------------
  %06d 中间的0表示左侧补零，6表示最少占6个格子，包括负号

HTTP1.1的请求方法
--------------------------------------------------------------
get、post、put(文件)、delete、head、option（查询方式）、trace（追踪路径）、connect（隧道协议连接***）

HTTP协议工作在
-------------------------------------------------------------
应用层

为解决CPU输出数据的速度远高于打印机的打印速度的矛盾可采用“缓冲”
-------------------------------------------------------------
缓冲是为了解决速度相差过大的问题的。
通道是独立于CPU的专门负责数据输入输出工作的处理机，它对外部设备实现统一管理，代替CPU对I/O操作进行控制，坚守I/O设备对CPU的中断次数，从而使I/O操作可以与CPU并行工作，通道是实现计算和传输并行的基础，以提高整个系统的效率

当路由器接收的IP报文的TTL值等于1时，采取的策略是-丢弃该分组
-------------------------------------------------------------
TTL值全称是“生存时间（Time To Live)”，简单的说它表示DNS记录在DNS服务器上缓存时间。
生存时间字段（time-to-live）TTL设置了数据报可以经过的最多路由器数。它指定了数据报的生存时间。
TTL的初始值由源主机设置（通常为32或64），一旦经过一个处理它的路由器，它的值就减去1。当该字段的值为0时，数据报就被丢弃，并发送ICMP报文通知源主机。

ARP协议的主要功能是：将IP地址解析为物理地址
------------------------------------------------------------
地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP/IP协议

Linux下通过哪个命令怎么查看中断？ cat /proc/interrupts
-------------------------------------------------------------
/proc/interrupts 显示使用的中断 
/proc/ioports 当前使用的I/O端口 
/proc/kcore 系统物理内存映像。与物理内存大小完全一样，但不实际占用这么多的内存。 
/proc/kmsg 内核输出的消息，也被送到syslog

使用shell时，默认的环境变量放在哪里？
------------------------------------------------------------
~/.bash_profile

有如下结构体，定义的一个变量所占大小为（ ） struct Node { int a; char b; int c; char d; };
-----------------------------------------------------------
在这种情况，成员大小选取int大小为4，4*4=16

尽管内存是以字节为单位，但是大部分处理器并不是按字节块来存取内存的.它一般会以双字节,四字节,8字节,16字节甚至32字节为单位来存取内存，我们将上述这些存取单位称为内存存取粒度.
现在考虑4字节存取粒度的处理器取int类型变量（32位系统），该处理器只能从地址为4的倍数的内存开始读取数据。

UDP报头中有下面那些信息？
------------------------------------------------------------
UDP报头只有四个域：源端口号，目的端口号，数据报长度，检验和。

clone和fork
-----------------------------------------------------------
fork() 函数复制时将父进程的所以资源都通过复制数据结构进行了复制，然后传递给子进程，所以 fork() 函数不带参数；
clone() 函数则是将部分父进程的资源的数据结构进行复制，复制哪些资源是可选择的，这个可以通过参数设定，所以 clone() 函数带参数，没有复制的资源可以通过指针共享给子进程

由上至下，写出网络OSI七层协议
-----------------------------------------------------------
应用层 HTTP TFTP FTP NFS WAIS SMTP
表示层 Telnet Rlogin SNMP Gopher
会话层 SMTP DNS
传输层 TCP UDP 
网络层 IP ICMP ARP PARP AKP UUCP
数据链路层 FDDI Ethernet Arpanet PDN SLIP PPP
物理层 IEEE802.1A IEEE802.2-IEEE802.11

TCP/IP四层模型
-----------------------------------------------------------
应用层
传输层
网络层
网络接口层

TCP使用滑动窗口进行流量控制，流量控制实际上是对（ ）的控制
------------------------------------------------------------
发送方数据流量

TCP在（ ）时候才会触发快速重传
------------------------------------------------------------
收到三个同样的ACK

缺省的Linux系统中，从后台启动进程，应在命令的结尾加上哪个符号？ （ ）
-------------------------------------------------------------
& 

算法的时间复杂度是指算法执行过程中所需要的基本运算次数

enum string{
x1,
x2,
x3=10,
x4,
x5,
} x; x1 的值是多少？
--------------------------------------------------------------
枚举变量是全局变量的情况下， 枚举值的缺省值是0，不是枚举的第一个值。 其他情况，其值是不定的，而且不限定于所列出的枚举值。

什么是零拷贝?
---------------------------------------------------------------

与http缓存有关的头字段
---------------------------------------------------------------
  常见的请求头：
  Accept: text/html,image/*                                              浏览器可以接收的类型 
  Accept-Charset: ISO-8859-1                                        浏览器可以接收的编码类型
  Accept-Encoding: gzip,compress                                 浏览器可以接收压缩编码类型 
  Accept-Language: en-us,zh-cn                                   浏览器可以接收的语言和国家类型
  Host: www.lks.cn:80                                                     浏览器请求的主机和端口
  If-Modified-Since: Tue, 11 Jul 2000 18:23:51 GMT   某个页面缓存时间 
  Referer: http://www.lks.cn/index.html                          请求来自于哪个页面
  User-Agent: Mozilla/4.0 compatible; MSIE 5.5; Windows NT 5.0   浏览器相关信息
  Cookie：                                                                      浏览器暂存服务器发送的信息
  Connection: close1.0/Keep-Alive1.1                            HTTP请求的版本的特点
  Date: Tue, 11 Jul 2000 18:23:51GMT                         请求网站的时间
  Allow:GET                                                                        请求的方法 GET 常见的还有POST
  Keep-Alive：5                                                                连接的时间；5
  Connection：keep-alive                                               是否是长连接
  Cache-Control：max-age=300                                     缓存的最长时间 300s

  常见的响应头：
  Location: http://www.lks.cn/index.html                            控制浏览器显示哪个页面 
  Server:apache nginx                                                        服务器的类型 
  Content-Encoding: gzip                                                   服务器发送的压缩编码方式 
  Content-Length: 80                                                         服务器发送显示的字节码长度 
  Content-Language: zh-cn                                               服务器发送内容的语言和国家名 
  Content-Type: image/jpeg; charset=UTF-8                    服务器发送内容的类型和编码类型 
  Last-Modified: Tue, 11 Jul 2000 18:23:51GMT           服务器最后一次修改的时间 
  Refresh: 1;url=http://www.lks.cn                                        控制浏览器1秒钟后转发URL所指向的页面 
  Content-Disposition: attachment; filename=lks.jpg      服务器控制浏览器发下载方式打开文件 
  Transfer-Encoding: chunked                                          服务器分块传递数据到客户端  
  Set-Cookie:SS=Q0=5Lb_nQ; path=/search                服务器发送Cookie相关的信息 
  Expires: -1                                                                        资源的过期时间，提供给浏览器缓存数据,-1永远过期 
  Cache-Control: no-cache                                               告诉浏览器，一定要回服务器校验，不管有没有缓存数据。 
  Pragma: no-cache                                                            服务器控制浏览器不要缓存网页   
  Connection: close/Keep-AliveHTTP                             请求的版本的特点   
  Date: Tue, 11 Jul 2000 18:23:51 GMT                       响应网站的时间 
  ETag：“ihfdgkdgnp98hdfg”                                       资源实体的标识(唯一标识，类似md5值，文件有修改md5就不一样)


  关于缓存相关头的解释：

  Expires 
              一个GMT时间,试图告知浏览器,在此日期内,可以信任并使用对应缓存中的副本,缺点是,一但客户端日期不准确.则可能导致失效.
  Pragma : no-cache   
          这个是http1.0中的常规头，作用同http1.1的 Cache-Control : no-cache
  Last-Modified 
          一个GMT时间,告知被请求实体的最后修改时间.用于浏览器校验其缓存副本是否仍然可以信任.与其相关的两个条件请求标头：
        1） If-Modified-Since 
          仅在get方法中意义，这个也是比较常见的。 如果实体在指定时间后,没有修改则返回一个304,否则返回一个常规的Get请求的响应(比如200)，静态文件没有修改返回304是好的，因为它只是回服务器校验一下是否有修改，而并没有像200那样重新请求数据。
        2） If-Unmodified-Since: 
          如果实体没有任何修改,那么就可以直接执行该请求， 而如果有修改,则返回一个412 Precondition Failed状态码,并且抛弃该方法对应的行为操作(GET方法除外). 
    Cache-Control (http1.1的常见头)
        1） public   
          仅体现在响应头，通知浏览器可以无条件的缓存该响应。
        2） private  
          仅体现在响应头，通知浏览器只针对单个用户缓存响应. 且可以具体指定某个字段.如private –“username”
        3） no-cache
            a) 请求头中：告诉浏览器回去服务器取数据，并验证你的缓存(如果有的话)。
            b) 响应头中：告诉浏览器，一定要回服务器校验，不管有没有缓存数据。 如果确定没有被改，可以使用缓存中               的数据
        4） no-store 
            告诉浏览器任何情况下都不要被缓存。
        5） max-age
            a) 请求头中：强制响应浏览器，根据该值,校验缓存.即与自身的Age值,与请求时间做比较.如果超出max-    age值,则强制去服务器端验证.以确保返回一个新鲜的响应.其功能本质上与传统的Expires类似,但区别在于Ex    pires是根据某个特定日期值做比较.一但缓存者自身的时间不准确.则结果可能就是错误的.而max-age,显然无    此问题. Max-age的优先级也是高于Expires的.
            b) 响应头中：同上

sed awk grep ,linux文本处理三剑客

在虚存系统中 , 只要磁盘空间无限大 , 作业就能拥有任意大的编址空间，此说法：错误
-------------------------------------------------------------
虚拟存储中虚拟空间的大小根据cpu可寻址范围来确定

选择排序、快速排序、希尔排序、堆排序不是稳定的排序算法，而冒泡排序、插入排序、归并排序和基数排序是稳定的排序算法。

C语言的printf函数，其返回值表示成功打印字符的个数。

c++ STL sort的实现
-----------------------------------------------

ping命令属于tcp/ip的哪一层？应用层
在 TCP/IP 参考模型中 TCP 协议工作在-传输层

（有更高优先级的进程到达而从执行状态变为就绪状态）可能是强占方式进程调度中引起调度的原因
--------------------------------------------
程的调度方式包括非剥夺方式和剥夺方式。 非剥夺方式： 分派程序一旦把处理机分配给某进程后便让它一直运行下去，直到进程完成或发生某事件而阻塞时，才把处理机分配给另一个进程。 剥夺方式： 当一个进程正在运行时，系统可以基于某种原则，剥夺已分配给它的处理机，将之分配给其它进程。剥夺原则有：优先权原则、短进程优先原则、时间片原则。 ABD抢占和非抢占式都可以发生，但是只有C是抢占式才能发生的

（请求分页）处理不当会产生抖动
----------------------------------------------
抖动就是指当内存中已无空闲而又发生缺页中断时，需要从内存中调出一页程序或者数据送磁盘的兑换区中，如果算法不适当，刚被换出的页很快被访问，需重新调入，因此需要选一页调出，而此时被换出的页很快又要被访问，因而又需将它调入，如此频繁更换页面，以致要花费大量的时间。我们称这种现象为“抖动”；故在请求分页的时候如果处理不当则会产生抖动

某种操作系统能够支持位于不同终端的多个用户同时使用一台计算机，彼此独立互不干扰，用户感到好像一台计算机全为他所用，这种操作系统属于（）
----------------------------------------------
A.批处理是指用户将一批作业提交给操作系统后就不再干预，由操作系统控制它们自动运行。 
B.分时操作系统是使一台计算机采用时间片轮转的方式同时为几个、几十个甚至几百个用户服务的一种操作系统。由于时间间隔很短，每个用户的感觉就像他独占计算机一样。
C.实时操作系统(RTOS)是指当外界事件或数据产生时，能够接受并以足够快的速度予以处理，其处理的结果又能在规定的时间之内来控制生产过程或对处理系统做出快速响应，并控制所有实时任务协调一致运行的操作系统。
D.网络操作系统，是一种能代替操作系统的软件程序，是网络的心脏和灵魂，是向网络计算机提供服务的特殊的操作系统。

什么是linux软中断
-----------------------------------------------

解决哈希冲突的常用方法
------------------------------------------------
① 开放定址法
从发生冲突的那个单元起，按照一定的次序，从哈希表中找到一个空闲的单元。然后把发生冲突的元素存入到该单元的一种方法。开放定址法需要的表长度要大于等于所需要存放的元素。
在开放定址法中解决冲突的方法有：线行探查法、平方探查法、双散列函数探查法。
开放定址法的缺点在于删除元素的时候不能真的删除，否则会引起查找错误，只能做一个特殊标记。只到有下个元素插入才能真正删除该元素。

② 链地址法（拉链法）
链接地址法的思路是将哈希值相同的元素构成一个同义词的单链表，并将单链表的头指针存放在哈希表的第i个单元中，查找、插入和删除主要在同义词链表中进行。链表法适用于经常进行插入和删除的情况。

③ 再哈希法
就是同时构造多个不同的哈希函数：
Hi = RHi(key) i= 1,2,3 … k;
当H1 = RH1(key) 发生冲突时，再用 H2 = RH2(key) 进行计算，直到冲突不再产生，这种方法不易产生聚集，但是增加了计算时间。

④ 建立公共溢出区
将哈希表分为公共表和溢出表，当溢出发生时，将所有溢出数据统一放到溢出区。

建立TCP连接的正确流程
  客户端向服务器端发送SYN包；服务端向客户端发送SYN+ACK；客户端回复ACK

不需要执行加锁的操作（x = 1)
----------------------------------------------
B：在X86上它包含两个操作：读取y至寄存器，再把该值写入x。读y的值这个操作本身是原子的，把值写入x也是原子的，但是两者合起来不是原子操作，因为它不是不可再分的操作，所以需要进行同步 
A、C：x++和++x这样的操作在多线程环境下是需要同步的。因为X86会按三条指令的形式来处理这种语句：从内存中读x的值到寄存器中，对寄存器加1，再把新值写回x 所处的内存地址 
D：x=1是原子操作，不可再分

关于虚拟地址空间
----------------------------------------------
A：虚拟空间和物理空间的映射是通过页表进行的，操作系统根据页表映射和置换算法进行操作，无一定的规律可循 
B： 在同一个X86兼容的主机上，如果CPU是64位的，最大虚拟空间在32位系统下是2^32字节，在64位下是2^64字节。 
D: 进程最大可寻址的空间时：和操作系统的位数也有关系。

说说CPU层级的代码优化

linux下侦测主机到目的主机之间所经过的路由的命令：traceroute

会导致用户进程从用户态切换到内核态的操作是？I.整数除于0 II. sin()函数调用 III. read系统调用
----------------------------------------------
选I.III；
用户态切到内核态的三种方式：系统调用、异常、外围设备的中断

Linux中，应用的运行起始地址都是一样的，是如何做到的？（使用虚拟内存转换）

Linux什么情况下会发生page fault？（所需访问虚拟内存未被加载）

linux中用于设置环境变量的命令是什么？（export）

哪种http状态下，浏览器会产生两次http请求？（302）
---------------------------------------
304 客户端申请的资源存在，但是条件不满足
302 临时重定向
404 NOT FOUNT
400 存在语法错误

主机甲向主机乙发送一个（SYN=1,seq=11220）的tcp段，期望与主机乙建立tcp连接，若主机乙接受该连接请求，则主机乙向主机甲发送的正确的tcp段可能是（SYN=1，ACK=1,seq=11221,ack=11221）


1，tcp三次握手
2，tcp的流量控制相关算法
3，tcp的拥塞控制
4，如何判断一个链表是否有环
5，如何确定链表环开始位置
6，实现一个单例模式
7，由上至下，写出网络的七层协议
8，什么是爬虫，请列举五中反爬机制
9，什么是零拷贝
10，C++ STL sort的实现
11，什么是linux软中断
12，说说CPU层级的代码优化
13，如何提升TCP三次握手的性能
14，cpu指令重排
15，MySQL为什么要选择B+树
16，什么是跳表
17，TCP与UDP有哪些区别
